<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 initialize="{this.ddlDateMode.selectedIndex = 0}">
	<fx:Declarations>
		<fx:Date id="softwareStartDate" date="1" month="0" fullYear="1955" />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			var dateModes = new ArrayCollection(["Year To Date", "Last Month", "Last Week", "Select Dates"]);
			
			/**
			 * This function computes the From date depending on the radio button and date picker
			 * selection
			 * */
			public function get selectedFromDate():Date {
/* 				if (select.selected)
					return selectFromDate.selectedDate;
				else {
					var date:Date = new Date(); //today
					if(yearToDate.selected) {
						date.setFullYear(date.fullYear - 1);
					} else if (lastMonth.selected) {
						date.setMonth(date.month - 1);
					} else if (lastWeek.selected) {
						date.setDate(date.date - 7);
					}
					return date;
				}	 */	
				if (ddlDateMode.selectedItem == 'Select Dates')
					return selectFromDate.selectedDate;
				else {
					var date:Date = new Date(); //today
					if(ddlDateMode.selectedItem == 'Year To Date') {
						date.setFullYear(date.fullYear - 1);
					} else if (ddlDateMode.selectedItem == 'Last Month') {
						date.setMonth(date.month - 1);
					} else if (ddlDateMode.selectedItem == 'Last Week') {
						date.setDate(date.date - 7);
					}
					return date;
				}	
			}
			
			/**
			 * This function computes the To date depending on the radio button and date picker
			 * selection
			 * */
			public function get selectedToDate():Date {
				var date:Date = ddlDateMode.selectedItem == 'Select Dates' ? selectToDate.selectedDate : new Date();
				
				//this is to ensure that times are considered - for instance when someone says
				//25th to 30th, they want the data generated on 30th also to be considered. This is why, 
				//31st will be taken, so that all data till 30-11:59 pm is taken in to the report				
				date.date = date.date + 1; 
				return date;
			}
			
			private var onChangeFunction:Function;
			
			public function set OnChange(value:Function)
			{
				this.onChangeFunction = value;
			}
		]]>
	</fx:Script>
	<s:HGroup verticalCenter="0" verticalAlign="middle">		
		<s:DropDownList id="ddlDateMode" dataProvider="{dateModes}" color="0x000000" 
						change="{if(ddlDateMode.selectedItem != 'Select Dates') onChangeFunction()}"/>
		<!--<s:RadioButton id="yearToDate" label="Year To Date" groupName="dateRange" click="{onChangeFunction()}"/>
		<s:RadioButton id="lastMonth" label="Last Month" groupName="dateRange" click="{onChangeFunction()}"/>
		<s:RadioButton id="lastWeek" label="Last Week" groupName="dateRange" click="{onChangeFunction()}"/>		
		<s:RadioButton id="select" label="Select Dates" groupName="dateRange"/>-->
		<s:HGroup enabled="{ddlDateMode.selectedItem == 'Select Dates'}">
			<mx:DateField id="selectFromDate" color="0x000000" />
			<mx:DateField id="selectToDate" color="0x000000" />
			<s:Button id="btnGet" label="Get" color="0x000000" click="{onChangeFunction()}"/>			
		</s:HGroup>		
	</s:HGroup>
</s:Group>