<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="800" height="600"
		 xmlns:charts="org.axiis.charts.*"
		 creationComplete="start();"
		 xmlns:axiis="org.axiis.*"
		 xmlns:series="org.axiis.charts.series.*"
		 xmlns:groupings="org.axiis.charts.groupings.*"
		 xmlns:degrafa="http://www.degrafa.com/2007"
		 xmlns:states="org.axiis.states.*"
		 xmlns:paint="org.axiis.paint.*"
		 xmlns:Examples="Examples.*"
		 xmlns:axis="org.axiis.charts.axis.*"
		 xmlns:labels="org.axiis.charts.labels.*"
		 xmlns:geom="flash.geom.*"
		 xmlns:geometry="com.degrafa.geometry.*" 
		 xmlns:scale="org.axiis.layouts.scale.*" 
		 xmlns:layouts="org.axiis.charts.layouts.*" 
		 xmlns:accuracystatistics="services.accuracystatistics.*">
	
	<!--<mx:Style source="styles/Axiis_Examples.css"/>-->
	<fx:Script>
		<![CDATA[
			import com.Teacher.UI.Utilities;
			import CustomEvents.ChartLoadedEvent;			
			import com.degrafa.paint.SolidFill;	
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			import org.axiis.data.DataSet;
			
			[Bindable]
			public var conceptData:ArrayCollection = new ArrayCollection([	
				{name:"Apr", monthNum:"1", accuracy:"70", count:"500"},
				{name:"May", monthNum:"2", accuracy:"75", count:"450"},
				{name:"Jun", monthNum:"3", accuracy:"70", count:"250"},
				{name:"Jul", monthNum:"4", accuracy:"80", count:"600"},
				{name:"Aug", monthNum:"5", accuracy:"85", count:"550"},
				{name:"Sep", monthNum:"6", accuracy:"85", count:"450"}]);			
			
			[Bindable]
			public var confidenceData:ArrayCollection = new ArrayCollection([	
				{name:"Apr", monthNum:"1", accuracy:"50", count:"300"},
				{name:"May", monthNum:"2", accuracy:"50", count:"350"},
				{name:"Jun", monthNum:"3", accuracy:"60", count:"200"},
				{name:"Jul", monthNum:"4", accuracy:"65", count:"400"},
				{name:"Aug", monthNum:"5", accuracy:"70", count:"500"},
				{name:"Sep", monthNum:"6", accuracy:"75", count:"250"}]);
			
			[Bindable]
			public var masteryData:ArrayCollection = new ArrayCollection([	
				{name:"Apr", monthNum:"1", accuracy:"40", count:"150"},
				{name:"May", monthNum:"2", accuracy:"45", count:"200"},
				{name:"Jun", monthNum:"3", accuracy:"50", count:"100"},
				{name:"Jul", monthNum:"4", accuracy:"50", count:"200"},
				{name:"Aug", monthNum:"5", accuracy:"60", count:"250"},
				{name:"Sep", monthNum:"6", accuracy:"65", count:"200"}]);
			
			[Bindable]
			public var einsteinData:ArrayCollection = new ArrayCollection([	
				{name:"Apr", monthNum:"1", accuracy:"30", count:"75"},
				{name:"May", monthNum:"2", accuracy:"35", count:"100"},
				{name:"Jun", monthNum:"3", accuracy:"35", count:"50"},
				{name:"Jul", monthNum:"4", accuracy:"30", count:"100"},
				{name:"Aug", monthNum:"5", accuracy:"40", count:"100"},
				{name:"Sep", monthNum:"6", accuracy:"45", count:"100"}]);
			
			
			public var loaded:Boolean = false;
			
			/**
			 * Set this to weekNum or dayNum depending on data - default:monthNum
			 * */
			[Bindable]
			public var timeField:String = "monthNum";
			
			/**
			 * Set this to the label field - default:name
			 * */			
			public var timePeriodLabelField:String = "name";
			
			public function start():void
			{
				bubbleChart.invalidateDisplayList();
				
				var t:Timer = new Timer(2000, 1);				
				t.addEventListener(TimerEvent.TIMER_COMPLETE, fireChartLoaded);
				t.start();
			}
			
			private function fireChartLoaded(event){
				loaded = true;
				dispatchEvent(new Event("chartLoaded"));
			}
			
			private function monthLabelFunction(axisRenderer, labelValue){
				for(var item in conceptData){
					if(conceptData[item][timeField] == labelValue) return conceptData[item][timePeriodLabelField];
				}
				for(var item in confidenceData){
					if(confidenceData[item][timeField] == labelValue) return confidenceData[item][timePeriodLabelField];
				}
				for(var item in masteryData){
					if(masteryData[item][timeField] == labelValue) return masteryData[item][timePeriodLabelField];
				}
				for(var item in einsteinData){
					if(einsteinData[item][timeField] == labelValue) return einsteinData[item][timePeriodLabelField];
				}
			}
			
			/**
			 * This function is used to render the data tip for the chart  
			 * */
			private function dataTipFunction(hitData){
				var displayName:String;
				if(hitData.element == conceptSeries){
					displayName = "Concept";
				} else if(hitData.element == confidenceSeries){
					displayName = "Confidence";
				} else if(hitData.element == masterySeries){
					displayName = "Mastery";
				} else if(hitData.element == einsteinSeries){
					displayName = "Einstein";
				}				
				
				return "<b>" + hitData.item[timePeriodLabelField] + "</b><br>" +
					   "<b>" + displayName + "</b><br>" +
					   "Answered = " + hitData.item.count +"<br>" +  
					   "Accuracy = " + hitData.item.accuracy + "%"
					   ;
			}			

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Define custom color and line style for the bubbles. -->
		<s:RadialGradient id="scConcept">
			<s:GradientEntry color="0xFFFFFF" alpha="0.5"/>
			<s:GradientEntry color="blue"/>
		</s:RadialGradient>
		<s:RadialGradient id="scConfidence">
			<s:GradientEntry color="0xFFFFFF" alpha="0.5"/>
			<s:GradientEntry color="green"/>
		</s:RadialGradient>
		<s:RadialGradient id="scMastery">
			<s:GradientEntry color="0xFFFFFF" alpha="0.5"/>
			<s:GradientEntry color="maroon"/>
		</s:RadialGradient>
		<s:RadialGradient id="scEinstein">
			<s:GradientEntry color="0xFFFFFF" alpha="0.5"/>
			<s:GradientEntry color="yellow"/>
		</s:RadialGradient>
		<!--mx:SolidColor id="scConcept" color="blue" alpha=".3"/-->
		<s:SolidColorStroke id="strokeConcept" color="blue" weight="2"/>
		<!--<mx:SolidColor id="scConfidence" color="green" alpha=".3"/>-->
		<s:SolidColorStroke id="strokeConfidence" color="green" weight="2"/>
		<!--<mx:SolidColor id="scMastery" color="maroon" alpha=".3"/>-->
		<s:SolidColorStroke id="strokeMastery" color="maroon" weight="2"/>
		<!--<mx:SolidColor id="scEinstein" color="yellow" alpha=".3"/>-->
		<s:SolidColorStroke id="strokeEinstein" color="yellow" weight="2"/>
	</fx:Declarations>
	<mx:BubbleChart id="bubbleChart" fontFamily="Arial" fontSize="20"
					dataProvider="{conceptData}" width="100%" height="100%"
					minRadius="1" maxRadius="50" verticalCenter="0" horizontalCenter="0" 
					showDataTips="true" gridLinesStyleName="none" 
					dataTipFunction="{dataTipFunction}">
		<mx:verticalAxisRenderers>
			<mx:AxisRenderer id="verticalRender" axis="{accuracyAxis}">			
			</mx:AxisRenderer>
		</mx:verticalAxisRenderers>
		<mx:horizontalAxisRenderers>
			<mx:AxisRenderer id="horizontalRender" axis="{monthAxis}" labelFunction="{monthLabelFunction}">			
			</mx:AxisRenderer>
		</mx:horizontalAxisRenderers>
		<mx:verticalAxis>
			<mx:LinearAxis title="Accuracy %" id="accuracyAxis" maximum="{Math.max(Utilities.getMax(conceptData, 'accuracy'), 
						   														   Utilities.getMax(confidenceData, 'accuracy'),
																				   Utilities.getMax(masteryData, 'accuracy'),
																				   Utilities.getMax(einsteinData, 'accuracy'))						   
			   																	+ 10}">						
			</mx:LinearAxis>
		</mx:verticalAxis>
		<mx:horizontalAxis>
			<!-- assumption made that concept data is always there - else this wont work -->
			<mx:LinearAxis title="Month" id="monthAxis" maximum="{Math.max(Utilities.getMax(conceptData, 'monthNum'), 
																		   Utilities.getMax(confidenceData, 'monthNum'),
																		   Utilities.getMax(masteryData, 'monthNum'),
																		   Utilities.getMax(einsteinData, 'monthNum')) + 2}" 
						   minimum="{Math.min(Utilities.getMin(conceptData, 'monthNum'), 
											   Utilities.getMin(confidenceData, 'monthNum'),
											   Utilities.getMin(masteryData, 'monthNum'),
											   Utilities.getMin(einsteinData, 'monthNum')) - 1}">					
			</mx:LinearAxis>
		</mx:horizontalAxis>
		<mx:series>
			<mx:BubbleSeries id="conceptSeries"
						     xField="{timeField}" 
							 yField="accuracy"
							 radiusField="count"
							 displayName="Concept: Accuracy"
							 dataProvider="{conceptData}"
							 fill="{scConcept}"
							 stroke="{strokeConcept}"
							 verticalAxis="{accuracyAxis}"
							 horizontalAxis="{monthAxis}">
			</mx:BubbleSeries>
			<mx:BubbleSeries id="confidenceSeries"
							 xField="{timeField}" 
							 yField="accuracy"
							 radiusField="count"
							 displayName="Confidence: Accuracy"
							 dataProvider="{confidenceData}"
							 fill="{scConfidence}"
							 stroke="{strokeConfidence}"
							 verticalAxis="{accuracyAxis}"
							 horizontalAxis="{monthAxis}">
			</mx:BubbleSeries>
			<mx:BubbleSeries id="masterySeries"
							 xField="{timeField}" 
							 yField="accuracy"
							 radiusField="count"
							 displayName="Mastery: Accuracy"
							 dataProvider="{masteryData}"
							 fill="{scMastery}"
							 stroke="{strokeMastery}"
							 verticalAxis="{accuracyAxis}"
							 horizontalAxis="{monthAxis}">
			</mx:BubbleSeries>
			<mx:BubbleSeries id="einsteinSeries"
							 xField="{timeField}" 
							 yField="accuracy"
							 radiusField="count"
							 displayName="Einstein: Accuracy"
							 dataProvider="{einsteinData}"
							 fill="{scEinstein}"
							 stroke="{strokeEinstein}"
							 verticalAxis="{accuracyAxis}"
							 horizontalAxis="{monthAxis}">
			</mx:BubbleSeries>
		</mx:series>		
	</mx:BubbleChart>
</s:Group>
